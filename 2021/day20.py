from helpers import *
from collections import *
from itertools import *
from math import *
from heapq import heappush, heappop, heappushpop, heapify, heapreplace
from functools import cache


example = """


#..#.
#....
##..#
..#..
..###
"""

actual = """


.##.#.###..#.....###..#.#.#.#.#.......#...#...##...####.######.#.##..#.##.#.#.###.#.##.#..####.#....
.#..#...##.##..######....##.#.##.###...#.##.#####..##..#.###.####..###.#.##..###..#....#.#..#...#.##
##.##.##..#...#....#######.#..##..#..##...#######..###..#.##....####.....#....#..#..##.##.#..##..###
#.##..##.....##...###..###.#...#..#..####..#.##....####.#...#.##..#.##.#.##.#.#.#######.##.#...##..#
.##......#.#.###.####..#..#.####..#.####.#####.###.##.#.#..##..####.#...##..####.####.....####.#..##
.#.#####.###....#.###.#.##.#.#.#.##.######....#.##.###..#.##.#..####.##..##.#.#..#.####.#####.#....#
..##.####...#.#.##.....#.#.##......#...###.#...##.##..#..####..##.##.#...#....##.#####..#.#...#.#...
###.###.##..##..#...#######...##.##...###..###.#.#.#.#..##.#..###....#.#..#..#....#.....#..#.....##.
#...##...#.####.##....#....##..#.##.##.##..#..##..#.....#####....#.#######..##....####..#.#.#.#...##
.#...#..#.##.#..#.#.....####.#.#..#..#####....##..##.#.####.##..####...#.###...#...##.##.#.#####.##.
.#####.##.##..#.####.#.#...######.####.######..#..#..#..#.##...#####.####....##...#..#.#....##.###.#
...#......##......#.#..##.#.###.####.#.##.#...###.#.##...#.##....#.#.#....###.....#...#..##..#######
##......###.####...#...####..........#.########...##.#.##....#.#######.##..####....#...#.#.#....#..#
.#.#.....#.#.#####.##.#.##.#..#.#..####.#.##.##.##..####...####...##..######.##..#..#.......###.##.#
.##.....######...#..#.#..#.##....#.#..##.###.###.##.#.####.###.##...##....#.#..######.##..#.#..#.#.#
.#.####.#...#.#.#.#.##..##...#....#...#..#....#..######..#..##.#.###.#..##.#.#.#......#.##..##.#...#
..#.##.#.#...###.###.#...####.###.#..####.#.#.#.#.##..#...#.#.##..##..#...####.####..##....###...##.
##.#.####.#....##.###...##.##.##.####.#.##...####.#....#####..##.#......#......#....#..#.#.##..#....
##.#.#.#..#.####..#..###.###.##..#######...#...#...#..#....#..#######.#..####..#.######..#.#..#.....
#.#.##.##.#.######.##.##.####..#.###...##...#.##.#.###..#...###...##.#....####.....#..##.###..##.##.
#.......###..#.#....###...##.###.##....#.##..##.....#.##.#.##..###...#..###.###.##.##....##.#.##.##.
.#.##...#..##.#.....##.##...#.#..#..#.#.....###.#.#..###.##.#.#.##.###.####..##......##.#..###.#.#.#
##.#######.###...#..###..##..#....##.#....#.#..###.#####...#..##...#...#..#.....#..####..##..#.#...#
..###.#.##.#.#..######...#.##...#.#.#..#..#.....##..##...#.#.####.#.#..##..###....##.##...###.#.###.
.##...###..##..#......##.#.##..#.##..#...#####...#.##.#.###..###......#.##.#.######..##........###.#
...#.#.####..######.####.###.#.####..#...##..#.#.##.##.##.#.##.##..#.....#.....##...#.##.##..##.####
....###.#.#...##.##..##.#...#...#..####.###.#.#...#.##.####.#.....###.##.##..###...#.#.#..#..#.#.#..
##.....#########.##.###..#...#.###..#.#...######.#..#.#.#..##.....#.#....###..#.##...#...#.##.#.###.
#..##.###..#...#.#.#..##.....###.##.########..###.#.....#####..######...#..#.#.##..##.####..#.#.#.#.
.####.####...###..##.#########...##.....#..####...#.##....###...#.##...#..#.#...#.###..###..##.###..
##....#.....##..#.###...#.......#.######.#.....#.##..#..#####.#.#.#.#.#........####...#.#.#.#.#.##.#
####.#...####...###......#....#..##..###.#.#..##.#....#.#######..#...#..#.#....####.##.####.##.##.#.
#.#..##..#.#..###....#..#######.#..###..#.##...##.#...#.#....#....##..#...####.##.#####.####..#.#..#
#..#.###.#.########.#.######........####...#.####.#######.##..######..##.#.#...##..#.##.#####..###.#
#.##.##.#..#..#.#.####.......#...##..###.#..#####..#..####.##.#...#...##.##..###...##.###.#...#.....
#..###...##.#.####..#.##...#.#.#.......##..#..###.#....##...#..#.##.......######.##..######...###.##
..##.##...#......##...#...#.....#..#....#.#...#....###.##....#..###...#.##....#####..#..###....#.#..
....#####..#..####..##.####.######.#..#.#..#..###..##....##.....###.#..##.#.###......#...#.####.#...
..#.###.#..##..#####..###.##.#..#.#..#.###.######.#..###.##...#..#####.###.##.#..#####..###..##.###.
#..#.....#.#...#.#..###.#####...###....##...##.###.#..##.#.#..######..#..##..##..#...#.#...#.#..#.##
#..#.#..#.##..##.###..###..#..#.#.#####.##....###.#.###..#..##....#..##.#.#.######....#.##.#.#...#..
#.#...#..##.###.#.##....###....#######..##.##...##.....##...##.#..#.##...####..####....###...##.#.##
#..###.##.#.#.#.##..#######.#.#...#..#.##...######...###.####.####.#..#.#.#.##.#.###.##.#.#..#.####.
..###.#...##.##..#.##.#..#.##.#.#.##.#..##.#.#.#.#...##....####.....####.#.##.......##..#....#.##...
###...#####..#..##.#...####....#.#.#######.#.#####........##..#.##.#..#.#.#.###.##.###..#.#.##..#.#.
.#..#.##......#..#..##..###..#.##....#.#..##.###......##.#.........#..###...#.#.##..#.#.#..#.......#
##....#..##.##.#..#...##....######..####.#..#.###..#.#.###...#..#..#.#..##.....#..###.###.#..#..###.
..#####.#.###.....#.#.#...###....#####.##.####...##...######..###....##.#.....##.###...#.#.#...##.#.
#...##..###......#..#.####.#.#.#.###.#.##.###...#.#.#.......#######.##...#..#.####...##...##....#...
#..###.###.......###.#.#.#.#.##.###..#..#..###..#.#.###..#.#.##...#..#.####...###.##...#.#....#..###
##...##.#...#..######.#....#.######.#.#.#####.#.##.#..#..##.###.##.#.#.###.##.....####..#.#.###.....
..#.#.....#####..#.#..#.#.#####..#.#.#.......###.#..#########..##..###.#....#..#..##.##.##.#..#.#.##
###.#.##..#..#####..####.###...#..#...#.##..##.#..#.#....#####.###..#######.#####.##.#......###....#
..##...#####.#.#..##.......##..##...#..##.###..##...###.#.########.....###.....###.........#.###.##.
#...#.#.#.#..##..#.#..#####...#####...##..##..#....##.#....#..##.##....###.#...#..#....#.####..#..##
.####....#..#......#........#.#####..#.##...#.####.#....##.###..#...#.#....###.#.##...#..##.#...####
.##..#.#.#....#.##.#.###.#.###...#..#....#.###.#...#..#..#..##..###....#.##.####..###.##....#.#....#
.###.#.##..#..#.#..##....#..####...##..####.##.#.#.##.#.#.##....##.#..#.#..##.##.###........######.#
..#.#....##...##.#.....#..#.#..#.####...###.##.#.#.#.#.#.##.#.#.#..#.#..#.##..#...#.##.#.#.#..#.###.
...#.#.####...#.#.####.##.#...###.###.#.#.##..##.###.#..####.#..#..##..#.##.######....####.#.#..####
....###...#.#.#..#..#.#.##..#...###.##..##....##..#.....##...######.#...#######...#.###......#..#.##
#.##.#.##.######..###.###..#...#.#...#..##.#####..#.#..##.###.#..#..######...###.#.#...##...###.###.
#.##.#.#..#.##.#.#.##..##.#....####.#..###.....#.#..#######....###.#.###.###...####..####...##.###.#
##.#..#.........#.##..#.#..#.....##.#.##..##..##.#..###.#####.#.###.###.##.....#.####..#.#..#.#..###
##..#.###.##..##.#..#..#..###...#.##...##...##....##..#..#.#####..#..###.#..###.#.##.#...#...##.####
..#..##.#####.#...#.....#..#.##.#.##......###..#..#..#..#.####.##........##.##..#...###.#.##.##..##.
.#..#.###.#....###...###..#........#.#...##.#.#####..##.#.##.#..#.#.##.##..#...#.#.##.#.##.....####.
....##.#...#.#..####..#...##...#..#.####..##..##.#..#.####...###.###...##.##..##..#...####...#...#..
....#..........###....#......#.#####.#..#..#..#####.##.###.##..###.###..#..####....#.##..##...#..###
##.#.####...#.#.#...###.#########.#....##..#...####...#...#...###..###.##.#...##..##..##....#.####.#
##.##..#.#..#...##...##.###..#.##..##..###.##..#.#.#.#.#.###...#..#.#.#.###....#..###..#.###.###.#.#
#.##.###.#.#.#.#.####.#.#.##..###...###.###.#...##.##.#.##########.#.####.#.##...###.#.#.##.....####
#######.#.###..##.###..###.#.###.#####.###..#.#.#.#.###..#...#..#.###..#.##.#..######..#...##.#####.
.#.#.###.##.#.#..#..#.##.....###...##.#..##.##......##.#...#.###.##..###....#..#..#..####.##.#.#.#.#
#.#.#.##..#.#..#.##..##..#...##.##..#....##.##...###..#######.#.#.###..####...#.#.###.####.###..####
.##....####..#.####.###..#..####.#.###..##.###.#..#.##.#.###.####.#..#.#.....#.##.##.#..##.#.#.#..##
#####..##..#.#.#....##..###.#.##...##..##..#..#.######.#.#.#.#..#.#.#####.###.#....#...##.##...####.
.#.#####.....#..#..#.#.##..#.#....##.#.##.#..##.####.#.###.#.....#..##......#..##.#..##.....#.#.##.#
#.###..#...#....##.##.##..##..#...#.#...#..#.##.......#.######.###...#.####.#.#....#.#.#.###.#.#..##
#.##..###...#.#...##.##..#......###.###..##.#...#.#...##..#..#.#..##.##...#...###.#.##...##..#...#..
.####....##.##..#.#.....#.#..#..#.##....#...#..###.#.##.#.#.##..#.#.####.##.#.###..###.##...##...##.
.#..##....#..#.#.#.#.#.#.....#.#.......#.#.#...#.#..#.#.#...##.......#.##....##.#.#...#....#.#.#....
.####.###..#.#.#.#.#..##...###...#...###..######.....#...#.#.#####..#.#.#.#.#...###.##.#.##....#.##.
#......#####.#...#..###....#..#..#..#..#####..#...#...#........##.#.#.##.##....##.#########.#..##..#
.##.#.#..####...#..#.#.......##......##...#.##....##.#..###..##......#.#..#.#..####..##.#...#...###.
#.###.....##.######.##.####.#..#..######.##...##.###..###..##..#.#.####..#.##.##.##.#..#.####.######
##..###.###.....#....###...#........####...#..##.#.#.#...#...##...#..####....###.##.#.##.#.#.#.#..#.
..#...#####...##.#####...#..####..####.#.#####..####.#.#######.#....###....##.#..#.#.#..#....#.#.###
.#..###..##.....####.#.#........#.###...#######..####.##.#..#.#####.#.......##.##.#.##..##......##.#
#.#...##..###.#...######..#.##.#.#.#######......###....##.######.##.##.#.###.#..###.##.#...#####..##
...##.##.####.###.#####....#..#......#....##.##..##.#.#...#.#...#.####.#####...##...#.###.....###.##
#......##.....###.#..##....###.##.#..#....#.#.#.#..#..##..####..#...#...#....####.#....########....#
...###..#.....##..#####.#..#.#####..####..####.##.#.#..####.#..####.#..##..##...###..#.##..###..####
##.##...#.########.#.#...#.##...#.#.#.#.###.#..#..#.####.#...#....#.#.###..##....#...#...##.###...#.
......#..###.#.#......#.#....##.###..#####..##.#.#..#####.##....#.#.#.#..##..#..##.#.#.........#.##.
..#.###..#.###.#.#.###.##..#.##....#....##.#...#.#.#...####.###....##.####........##..#..#..####..#.
.#.....#..#..#.#####.#.##.##.##.##.#..###.#.......##..#.#..#.###..#...###.##....#.####..#....#.#####
.##..#.####.#...#.....#.###..##...##.##...#..##.#......#.#####..........###.#.#.#.####.###...###.##.
.#.####..#.#.#.....#....#.#.#.#.#..#####..##.##.#.#.#..#.#..###...##..###..#..##.####...######...###
.#...#.####...##..#.#.####.###..#.#.#..####.###.####.##.#.#.##...#.#...#..#.##.......#....#..###...#
"""


from copy import deepcopy

MAP = {'.': '0', '#': '1'}

def solve(inp):
    inp = inp.strip().split('\n')
    inp = list(map(list, inp))
    algo = inp[0]
    image = inp[2:]

    num_iterations = 50

    # Final padding needs to have room for 1 px growth in each dimension per iteration
    height = len(image) + 2 * num_iterations
    width = len(image[0]) + 2 * num_iterations
    image = add_padding_with_bounds(height, width, image)
    new_image = deepcopy(image)

    for x in range(num_iterations):
        for i in range(len(image)):
            for j in range(len(image[0])):
                pixels = neighboring_pixels(image, i, j)
                idx = int(pixels, 2)
                new_image[i][j] = algo[idx]
        tmp = image
        image = new_image
        new_image = tmp
    
    return count_pixels(image)


def neighboring_pixels(image, i, j):
    pixels = ''
    # Any pixel beyond the bounds of the image should match the corner
    fallback_value = MAP[image[0][0]]
    for x in range(i-1, i+2):
        for y in range(j-1, j+2):
            if 0 <= x < len(image) and 0 <= y < len(image[0]):
                pixels += MAP[image[x][y]]
            else:
                pixels += fallback_value
    return pixels


def count_pixels(img):
    return sum(sum(i == '#' for i in l) for l in img)


def add_padding_with_bounds(height, width, grid):
    padded = []
    for i in range(height):
        padded.append(['.' for j in range(width)])

    # Insert the grid in the middle
    height_offset = height // 2 - len(grid) // 2
    width_offset = width // 2 - len(grid[0]) // 2

    for i in range(len(grid)):
        for j in range(len(grid[0])):
            padded[i + height_offset][j + width_offset] = grid[i][j]
    return padded


def img_str(grid):
    return '\n'.join([''.join(l) for l in grid])


if __name__=='__main__':
    example_ans = solve(example)
    print(f'example:\n {example_ans}')

    actual_ans = solve(actual)
    print(f'actual:\n {actual_ans}')

